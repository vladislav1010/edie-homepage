:root {
  /* Hues */
  --gray-1: #333333;
  --gray-2: #4f4f4f;
  --gray-3: #828282;
  --gray-4: #bdbdbd;
  --gray-6: #f2f2f2;
  --white: #ffffff;
  --blue-500: #2d9cdb;
  --blue-600: #2185c0;
  --blue-700: #1b6d9d;
  /*noinspection CssInvalidFunction*/
  --blue-500-50a: color(#2d9cdb a(50%));

  /* Font familiees */
  --font-sans-serif: Poppins;
  /* If purpose of these variables in program changes, I'll rename variables to explain what I'm up to. */
  --font-logo: Heebo;
  --font-copyright: Montserrat;

  /* Font weights */
  --font-weight-normal: 400;
  --font-weight-medium: 500;
  /* Another font weights are related only to logo and copyright, so I consider them on-off values. */

  /* Font sizes */
  --text-base: 1rem;
  --text-lg: 1.125rem;

  /* Color naming abstraction */
  --primary-500: var(--blue-500);
  --primary-600: var(--blue-600);
  --primary-700: var(--blue-700);
  --primary-500-50a: var(--blue-500-50a);

  /* Any future modifications to the repeating code can be done in one place and used by all the callers.
  Should the code vary in the future, I can easily move it (or some of it) out again */
  --text-title: var(--gray-1);
  --text-body: var(--gray-2);
  --text-caption: var(--gray-3);

  /* This matches the problem, and behavior code is simple and straightforward. */
  --text-darkm-default: var(--gray-6);

  --text-placeholder: var(--gray-4);

  /* Colors of the logo on dark and light backgrounds aren't ruled by categorization above.
  Domain logic of specific colors for logo doesn't duplicated.
  According to DAMP principle, the what-to's of the logo will describe it using specific steps: color, font-size, etc.
  A following situation is highly unlikely: every time we make a change, we have to make a lot of little edits to a lot of different places.
  So, we won't forget to update the logo's color, because we want to update some color in specific places. */

  /* Line heights */
  --leading-normal: 1.5;
  --leading-none: 1;

  /* Border widths */
  --border-1: 1px;

  /* Border radius */
  --rounded-xl: 0.75rem;

  /* Ring widths */
  --ring-3: 3px;

  /* Box-shadows */
  --box-shadow-ring: var(--edie-ring-inset) 0 0 0
    calc(var(--edie-ring-width) + var(--edie-ring-offset-width))
    var(--edie-ring-color);
}

* {
  --edie-shadow: 0 0 transparent;
  /*noinspection CssUnresolvedCustomProperty*/
  --edie-ring-inset: var(--edie-empty, /*!*/ /*!*/);
  --edie-ring-offset-width: 0px;
  --edie-ring-offset-color: #fff;
  --edie-ring-color: var(--primary-500-50a);
  --edie-ring-offset-shadow: 0 0 transparent;
  --edie-ring-shadow: 0 0 transparent;
  /* Default for ring width. I think, there is applies the following rule:
  "If a change in one record causes a field in another record to change too, thatâ€™s a sign of a field in the wrong place." */
  --edie-ring-width: var(--ring-3);
}
